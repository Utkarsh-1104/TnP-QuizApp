{
    "System Design": [
        {
            "question": "What is the primary purpose of load balancing in a distributed system?",
            "options": [
                "To distribute incoming traffic evenly across multiple servers",
                "To store large amounts of data",
                "To back up data regularly",
                "To reduce the cost of servers"
            ],
            "answer": "To distribute incoming traffic evenly across multiple servers"
        },
        {
            "question": "Which database would be most suitable for storing hierarchical data, such as an organization chart?",
            "options": ["Relational Database", "Key-Value Store", "Document Database", "Graph Database"],
            "answer": "Graph Database"
        },
        {
            "question": "What does 'scalability' mean in system design?",
            "options": [
                "The ability of a system to function with minimal downtime",
                "The ability of a system to handle increased load by adding resources",
                "The ability of a system to provide data security",
                "The ability of a system to recover from failure quickly"
            ],
            "answer": "The ability of a system to handle increased load by adding resources"
        },
        {
            "question": "Which caching strategy ensures the most recently accessed items are kept in the cache?",
            "options": ["Least Recently Used (LRU)", "First In, First Out (FIFO)", "Random Replacement", "Most Recently Used (MRU)"],
            "answer": "Least Recently Used (LRU)"
        }
    ],
    "Data Structures": [
        {
            "question": "What is the time complexity of accessing an element in an array by index?",
            "options": ["O(n)", "O(1)", "O(log n)", "O(n^2)"],
            "answer": "O(1)"
        },
        {
            "question": "Which data structure uses the principle of First In, First Out (FIFO)?",
            "options": ["Stack", "Linked List", "Queue", "Hash Table"],
            "answer": "Queue"
        },
        {
            "question": "What is the main advantage of using a linked list over an array?",
            "options": ["Better memory utilization", "Faster access to elements", "Easier sorting", "Fixed size"],
            "answer": "Better memory utilization"
        },
        {
            "question": "Which of the following data structures is used to implement recursion?",
            "options": ["Queue", "Graph", "Array", "Stack"],
            "answer": "Stack"
        }
    ],
    "DBMS": [
        {
            "question": "Which of the following is a key feature of a DBMS?",
            "options": ["Data Redundancy", "Data Isolation", "Data Integrity", "None of the above"],
            "answer": "Data Integrity"
        },
        {
            "question": "What is the purpose of a primary key in a database table?",
            "options": [
                "To link two tables together",
                "To allow duplicate records in the table",
                "To uniquely identify each record in the table",
                "To store foreign key values"
            ],
            "answer": "To uniquely identify each record in the table"
        },
        {
            "question": "Which of the following SQL statements is used to retrieve data from a database?",
            "options": ["INSERT", "SELECT", "UPDATE", "DELETE"],
            "answer": "SELECT"
        },
        {
            "question": "What does ACID stand for in database transactions?",
            "options": [
                "Atomicity, Consistency, Isolation, Durability",
                "Accuracy, Consistency, Isolation, Durability",
                "Availability, Consistency, Integrity, Durability",
                "Atomicity, Concurrency, Integrity, Durability"
            ],
            "answer": "Atomicity, Consistency, Isolation, Durability"
        }
    ],
    "OOPs": [
        {
            "question": "Which of the following is not a principle of OOP?",
            "options": ["Encapsulation", "Polymorphism", "Abstraction", "Compilation"],
            "answer": "Compilation"
        },
        {
            "question": "What does 'inheritance' in OOP allow?",
            "options": [
                "Defining multiple classes in a program",
                "Creating a new class by reusing code from an existing class",
                "Declaring data members private",
                "Hiding the complexity of the implementation"
            ],
            "answer": "Creating a new class by reusing code from an existing class"
        },
        {
            "question": "Which of the following is an example of polymorphism in OOP?",
            "options": [
                "Using private data members",
                "Method overloading and method overriding",
                "Declaring a class as abstract",
                "Accessing data using pointers"
            ],
            "answer": "Method overloading and method overriding"
        },
        {
            "question": "What is encapsulation in OOP?",
            "options": [
                "Combining data and methods that operate on that data into a single unit",
                "Hiding the methods from the user",
                "Using pointers to access data",
                "Allowing multiple inheritance in a program"
            ],
            "answer": "Combining data and methods that operate on that data into a single unit"
        }
    ]
}
  